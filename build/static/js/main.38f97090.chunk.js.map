{"version":3,"sources":["Header.js","firebase.js","SidebarOption.js","StateProvider.js","Sidebar.js","Message.js","ChatInput.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Avatar","src","alt","type","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","useState","channels","setChannels","user","useEffect","onSnapshot","snapshot","docs","map","doc","data","displayName","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","Message","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","chanId","input","setInput","toLowerCase","onChange","e","target","Button","hidden","preventDefault","FieldValue","serverTimestamp","photoURL","Chat","useParams","channelDetails","setChannelDetails","roomMessages","setRoomMessages","orderBy","console","log","actionTypes","state","action","Login","dispatch","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38f97090.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport AccessTimeIcon from '@material-ui/icons/Timer';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n                <div className=\"header__left\">\r\n                    <Avatar src=\"https://lh3.googleusercontent.com/ogw/ADGmqu9ASfkG8cYsMC8voWrBP3lG76Rj06hW8yw9TtHvXA=s64-c-mo\" alt=\"user\" />\r\n                    <AccessTimeIcon />\r\n                </div>\r\n                <div className=\"header__search\">\r\n                    <SearchIcon />\r\n                    <input className=\"search__input\" type=\"text\" placeholder=\"Search Blume....\" />\r\n                </div>\r\n                <div className=\"header__right\">\r\n                    <HelpOutlineIcon />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDwN0CTeIn-j8xQhxyZuWvbvYKYRvaSQUY\",\r\n    authDomain: \"slack-app-2020.firebaseapp.com\",\r\n    databaseURL: \"https://slack-app-2020.firebaseio.com\",\r\n    projectId: \"slack-app-2020\",\r\n    storageBucket: \"slack-app-2020.appspot.com\",\r\n    messagingSenderId: \"1072076385618\",\r\n    appId: \"1:1072076385618:web:fde0767125e59307b05e8b\",\r\n    measurementId: \"G-M1H210G431\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default db;\r\nexport { auth, provider };","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\n\r\nfunction SidebarOption({ Icon, title, id, addChannelOption }) {\r\n  const history = useHistory();\r\n\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      history.push(`/channel/${id}`);\r\n    } else {\r\n      history.push(title);\r\n    }\r\n  };\r\n  const addChannel = () => {\r\n    const channelName = prompt(\"Please enter channel name\");\r\n\r\n    if (channelName) {\r\n      db.collection(\"channels\").add({\r\n        name: channelName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebarOption\"\r\n      onClick={addChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon className=\"sOption__icon\" />}\r\n      {Icon ? (\r\n        <h3>{title}</h3>\r\n      ) : (\r\n        <h3 className=\"sOption__channel\">\r\n          <span className=\"sOption__hash\">#</span> {title}\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport db from './firebase'\r\nimport {useStateValue} from './StateProvider'\r\n\r\nfunction Sidebar() {\r\n  const [channels, setChannels] = useState([]);\r\n  const [{user}] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"channels\").onSnapshot((snapshot) =>\r\n      setChannels(\r\n        snapshot.docs.map((doc) => ({ id: doc.id, name: doc.data().name }))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <div className=\"sidebar__info\">\r\n          <h2>BlumeCTO</h2>\r\n          <h3>\r\n            <FiberManualRecordIcon />\r\n              {user?.displayName}\r\n          </h3>\r\n        </div>\r\n        <CreateIcon />\r\n      </div>\r\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n      <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\r\n      <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\r\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\r\n      <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\r\n      <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n      <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\r\n      <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\r\n      <hr />\r\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n      <hr />\r\n      <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n      {channels.map((channel) => (\r\n        <SidebarOption title={channel.name} id={channel.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n  return (\r\n    <div className=\"message\">\r\n      <img src={userImage} alt=\"\" />\r\n      <div className=\"message__info\">\r\n        <h4>\r\n          {user}{\" \"}\r\n          <span className=\"message__timestamp\">\r\n            {new Date(timestamp?.toDate()).toUTCString()}\r\n          </span>\r\n        </h4>\r\n        <p>{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState } from 'react'\r\nimport './ChatInput.css'\r\nimport {Button} from '@material-ui/core'\r\n\r\nimport db from './firebase'\r\nimport firebase from 'firebase'\r\nimport {useStateValue} from './StateProvider'\r\n\r\n\r\nfunction ChatInput({chanId, channelName}) {\r\n    const[input, setInput] = useState('');\r\n    const [{user}] = useStateValue();\r\n\r\n    const sendMessage = e => {\r\n        e.preventDefault();\r\n\r\n        if(!chanId){\r\n            return false;\r\n        }\r\n\r\n        db.collection('channels').doc(chanId).collection('messages').add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatInput\">\r\n                <form>\r\n                    <input\r\n                    placeholder={`Message #${channelName.toLowerCase()}`}\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    type=\"text\"\r\n                    />\r\n                    <Button hidden type=\"submit\" onClick={sendMessage} >SEND</Button>\r\n                </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatInput\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport './Chat.css'\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined'\r\nimport InfoOutlinedIcon  from '@material-ui/icons/InfoOutlined'\r\nimport db from './firebase'\r\nimport Message from './Message'\r\nimport ChatInput from './ChatInput'\r\n\r\nfunction Chat() {\r\n    const {chanId} = useParams();\r\n    const [channelDetails, setChannelDetails] = useState(null);\r\n    const [roomMessages, setRoomMessages]  = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (chanId) {\r\n            db.collection(\"channels\")\r\n              .doc(chanId)\r\n              .onSnapshot((snapshot) => {\r\n                setChannelDetails(snapshot.data());\r\n              });\r\n      \r\n              db.collection('channels').doc(chanId)\r\n              .collection('messages')\r\n              .orderBy('timestamp', 'asc')\r\n              .onSnapshot(snapshot => setRoomMessages(snapshot.docs.map(doc => doc.data()))\r\n              )\r\n        }\r\n    }, [chanId])\r\n\r\n    console.log(channelDetails);\r\n    console.log(\"MESSAGES >>>\", roomMessages)\r\n    \r\n    return (\r\n        <div className=\"chat\">\r\n            {channelDetails && roomMessages && (\r\n                <>\r\n                <div className=\"chat__header\">\r\n                    <div className=\"header__left\">\r\n                        <h4 className=\"channel__name\">\r\n            <strong># {channelDetails.name}</strong>\r\n                            <StarBorderOutlinedIcon />\r\n                        </h4>\r\n                    </div>\r\n\r\n                    <div className=\"header__right\">\r\n                        <p>\r\n                            <InfoOutlinedIcon /> Details\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat__messages\">\r\n                  {roomMessages.map(({ message, timestamp, user, userImage }) => (\r\n                  <Message\r\n                    message={message}\r\n                    timestamp={timestamp}\r\n                    user={user}\r\n                    userImage={userImage}\r\n                    />\r\n                    ))}\r\n                </div>\r\n\r\n                <ChatInput channelName={channelDetails.name} chanId={chanId} />\r\n        </>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    'SET_USER': \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react'\r\nimport './Login.css'\r\nimport {Button} from '@material-ui/core'\r\nimport {auth, provider} from './firebase'\r\nimport { useStateValue } from './StateProvider'\r\nimport {actionTypes} from './reducer'\r\nfunction Login() {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = e => {\r\n        auth.signInWithPopup(provider)\r\n        .then(result => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        }).catch(error => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" alt=\"\"/>\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to BlumeChat</h1>\r\n                    <p>blumespace.slack.com</p>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={signIn}>\r\n                    Sign in with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Chat from './Chat';\nimport Login from './Login';\nimport {useStateValue} from './StateProvider'\n\nfunction App() {\n\n  const[{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ): (\n          <>\n          <Header />\n      <div className=\"app__body\">\n        <Sidebar />\n        <Switch>\n          <Route path=\"/channel/:chanId\">\n            <Chat />\n          </Route>\n          <Route path=\"/\">\n            <Chat />\n          </Route>\n        </Switch>\n      </div>\n        </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {StateProvider} from './StateProvider';\nimport reducer, {initialState} from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n      <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}